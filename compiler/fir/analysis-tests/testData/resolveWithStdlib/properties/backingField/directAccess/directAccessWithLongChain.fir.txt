FILE: directAccessWithLongChain.kt
    public final class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final var number: R|kotlin/String|
            internal <explicit backing field>: R|kotlin/Int| = Int(10)
            public get(): R|kotlin/String| {
                ^ this@R|/A|.F|/A.number|.R|kotlin/Int.toString|()
            }
            public set(newValue: R|kotlin/String|): R|kotlin/Unit| {
                this@R|/A|.F|/A.number| = R|<local>/newValue|.R|kotlin/String.length|
            }

    }
    public final fun box(): R|kotlin/String| {
        lval a: R|A| = R|/A.A|()
        lval previousNumber: R|kotlin/Int| = R|<local>/a|.F|/A.number|.R|kotlin/Int.dec|()
        when () {
            !=(R|<local>/previousNumber|, Int(9)) ->  {
                ^box <strcat>(String(FAIL: expected ), String("), String(9), String("), String(, was ), R|<local>/previousNumber|)
            }
        }

        ^box String(OK)
    }
